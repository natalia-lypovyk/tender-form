{"version":3,"sources":["context.ts","reducer.ts","components/Classification/Classification.styles.ts","components/Classification/Classification.tsx","components/Item/Item.styles.ts","components/Item/Item.tsx","components/Items/Items.tsx","components/Form/Form.styles.ts","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Context","React","createContext","state","tender","title","description","classification","scheme","id","lots","items","dispatch","action","reducer","type","payload","unit","name","quantity","initialState","SubForm","styled","div","Classification","useContext","variant","align","value","readOnly","Input","css","placeholder","onChange","e","StyledForm","Item","onClick","Button","direction","options","label","Items","useState","item","setItem","Form","form","alignment","horizontal","vertical","Flex","onSubmit","preventDefault","console","log","App","useReducer","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91ead301.chunk.js","sourcesContent":["import React from 'react';\n\ntype Action = {\n  type: string;\n  payload: any\n}\n\nexport const ContextForm = {\n  tender: {\n    title: '',\n    description: '',\n    classification: {\n      scheme: 'CPV',\n      id: '',\n      description: '',\n    },\n    lots: [],\n    items: [],\n  }\n};\n\nexport const Context = React.createContext({ \n  state: ContextForm, \n  dispatch: (action: Action) => {}\n});\n","export const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case 'addTitle': {\n      return {\n        tender: {\n          ...state.tender,\n          title: action.payload\n        }\n      };\n    }\n\n    case 'addDescription': {\n      return {\n        tender: {\n          ...state.tender,\n          description: action.payload\n        }\n      }\n    }\n\n    case 'addClassificationDescription': {\n      return {\n        tender: {\n          ...state.tender,\n          classification: {\n            ...state.tender.classification,\n            description: action.payload\n          }       \n        }\n      }\n    }\n\n    case 'addUnit': {\n      return {\n        tender: {\n          ...state.tender,\n          items: {\n            ...state.tender.items,\n            unit: {\n              name: action.payload\n            }\n          }\n        }\n      }\n    }\n\n    case 'addQuantity': {\n      return {\n        tender: {\n          ...state.tender,\n          items: {\n            ...state.tender.items,\n            quantity: action.payload\n          }\n        }\n      }\n    }\n\n    case 'addLotTitle': {\n      return {\n        tender: {\n          ...state.tender,\n          lots: {\n            title: action.payload,\n          }\n        }\n      }\n    }\n\n    case 'addItemTitle': {\n      return {\n        tender : {\n          ...state.tender,\n          items: {\n            ...state.tender.items,\n            title: action.payload            \n          }\n        }\n      }\n    }\n\n    case 'addItemDescription': {\n      return {\n        tender : {\n          ...state.tender,\n          items: {\n            ...state.tender.items,\n            description: action.payload            \n          }\n        }\n      }\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport const initialState = {\n  tender: {\n    title: '',\n    description: '',\n    classification: {\n      scheme: 'CPV',\n      id: '',\n      description: '',\n    },\n    lots: [],\n    items: []\n  }\n};\n","import styled from 'styled-components';\n\nconst SubForm = styled.div`\n  border: 1px solid var(--c-positive);\n  border-radius: 4px;\n  padding: 10px;\n  margin-top: 10px;\n`;\n\nexport default { SubForm };\n","import React, { FC, useContext } from 'react';\nimport { css } from 'styled-components';\n\nimport Text from 'ustudio-ui/components/Text';\nimport TextInput from 'ustudio-ui/components/Input/TextInput';\nimport TextArea from 'ustudio-ui/components/Input/TextArea';\n\nimport { Context } from '../../context';\nimport Styled from './Classification.styles';\n\n\nexport const Classification: FC = () => {\n  const { dispatch } = useContext(Context);\n\n  return (\n    <Styled.SubForm>\n      <Text \n        variant='h5' \n        align='center'\n      >\n        Classification\n      </Text>\n        <label>\n          <TextInput \n            name='scheme'\n            value='CPV'\n            readOnly\n            styled={{\n              Input: css`\n                width: 40%;\n              `\n            }}\n          />\n        </label>\n\n        <label>\n          Description: \n          <TextArea  \n            name='classification-description'\n            placeholder='Enter description'\n            onChange={(e) => dispatch({\n              type: 'addClassificationDescription',\n              payload: e\n            })}\n          />\n        </label>\n    </Styled.SubForm>\n  )\n}\n","import styled from 'styled-components';\n\nconst StyledForm = styled.div`\n  border: 1px solid var(--c-positive);\n  border-radius: 4px;\n  padding: 10px;\n  margin-top: 10px;\n`;\n\nexport default { StyledForm };","import React, { FC, useContext } from 'react';\n//import { v4 as uuidv4 } from 'uuid';\nimport { css } from 'styled-components';\n\nimport Text from 'ustudio-ui/components/Text';\nimport TextInput from 'ustudio-ui/components/Input/TextInput';\nimport NumberInput from 'ustudio-ui/components/Input/NumberInput';\nimport Button from 'ustudio-ui/components/Button';\nimport RadioGroup from 'ustudio-ui/components/RadioGroup';\n\nimport { Context } from '../../context';\nimport { Classification } from '../Classification';\nimport Styled from './Item.styles';\n\nexport const Item: FC = () => {\n  const { dispatch } = useContext(Context);\n  \n  const addClassification = () => {\n        \n  }\n  \n  return (\n    <Styled.StyledForm>\n      <label>\n        Title:\n        <TextInput\n          name='item-title'\n          placeholder='Enter title'\n          onChange={(e) => dispatch({\n            type: 'addItemTitle',\n            payload: e\n          })}\n        />\n      </label>\n      <label>\n        Item description:\n        <TextInput\n          name='item-description'\n          placeholder=\"Enter description\"\n          onChange={(e) => dispatch({\n            type: 'addItemDescription',\n            payload: e\n          })}\n        />\n      </label>\n      <label>\n        Related lot:\n        <TextInput\n          name='related-lot'\n          placeholder='Enter related lot'\n        />\n      </label>\n      <Classification />\n      <label>\n        <Text align='center'>Additional classification:</Text>\n        <Button \n          onClick={addClassification}\n          styled={{\n            Button: css`\n              display: block;\n              margin: 10px auto;\n            `,\n          }}\n        >\n          Add\n        </Button>\n      </label>\n      \n      <label>\n        Unit:\n        <RadioGroup\n          direction='row'\n          name='options'\n          onChange={(e) => dispatch({\n            type: 'addUnit',\n            payload: e\n          })\n      }\n          options={{\n            'metre': {\n              label: 'metre',\n              value: 'metre'              \n            },\n            'kilo': {\n              label: 'kilo',\n              value: 'kilo'\n            }            \n          }}\n        />\n      </label>\n      <label>\n        Quantity: \n        <NumberInput \n          name='quantity'\n          onChange={(e) => dispatch({\n            type: 'addQuantity',\n            payload: e\n          })}\n          placeholder='Enter quantity'\n          \n        />\n      </label>      \n    </Styled.StyledForm>\n  )\n}","import React, { FC, useState } from 'react';\n//import { v4 as uuidv4 } from 'uuid';\nimport Text from 'ustudio-ui/components/Text';\nimport Button from 'ustudio-ui/components/Button';\nimport { Item } from '../Item';\nimport { css } from 'styled-components';\nexport const Items: FC = () => {\n  const [item, setItem] = useState(false);\n\n  const addItem = (): void => {\n    setItem(true);    \n  }\n\n  return (\n    <>\n      <Text variant='h5' align='center'>Items</Text>\n\n      {item ? (\n        <Item />\n      ) : (\n          <Button\n            onClick={addItem}\n            styled={{\n              Button: css`\n                display: block;\n                margin: auto;          `\n            }}\n          >Add new item</Button>\n        )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  width: 100%;\n  max-width: 600px;\n  padding: 10px;\n  border: 1.5px solid var(--c-positive-light);\n  border-radius: 8px;\n`;\n\nexport default { Form };\n","import React, { FC, FormEvent, useContext } from 'react';\n//import { v4 as uuidv4 } from 'uuid';\nimport { css } from 'styled-components';\n\nimport Flex from 'ustudio-ui/components/Flex';\nimport TextInput from 'ustudio-ui/components/Input/TextInput';\nimport TextArea from 'ustudio-ui/components/Input/TextArea';\nimport Button from 'ustudio-ui/components/Button';\n\nimport { Context } from '../../context';\nimport { Classification } from '../Classification';\nimport { Items } from '../Items';\n\nimport Styled from './Form.styles';\n\nexport const Form: FC = () => {\n  const {state, dispatch} = useContext(Context);  \n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    \n    console.log(state);    \n  }\n\n  return (\n    <Flex\n      alignment={{\n        horizontal: 'center',\n        vertical: 'center'\n      }}\n      styled={{\n        Flex: css`\n          width: 60%;\n          margin: 50px auto;\n        `,\n      }}\n    >\n      <Styled.Form onSubmit={handleSubmit} >\n        <label>\n          Title:\n          <TextInput\n            name='title'\n            placeholder='Enter tender title'\n            onChange={(e) => dispatch({\n              type: 'addTitle',\n              payload: e\n            })}            \n          />\n        </label>\n\n        <label>\n          Description:\n          <TextArea\n            name='description'\n            placeholder='Enter description'\n            onChange={(e) => dispatch({\n              type: 'addDescription',\n              payload: e\n            })}            \n          />\n        </label>\n        <Classification />  \n        <Items />     \n        <Button\n          styled={{\n            Button: css`\n              display: block;\n              margin: 30px auto 0;\n            `,\n          }}\n        >\n          Create tender\n        </Button>\n      </Styled.Form>\n    </Flex>\n  )\n};\n","import React, { FC, useReducer } from 'react';\nimport { Context } from './context';\nimport { reducer, initialState } from './reducer';\nimport { Form } from './components';\n\nconst App: FC = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <Context.Provider value={{ state, dispatch }}>\n      <Form />\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'ustudio-ui/theme';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}