{"version":3,"sources":["context.ts","reducer.ts","components/Classification/Classification.styles.ts","components/Classification/Classification.tsx","components/Item/Item.styles.ts","components/Item/Item.tsx","components/Lot/Lot.styles.ts","components/Lot/Lot.tsx","components/Form/Form.styles.ts","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Context","React","createContext","state","tender","title","description","classification","scheme","id","lots","items","dispatch","initialState","reducer","action","type","payload","unit","name","quantity","filter","lot","i","index","map","value","item","SubForm","styled","div","Classification","useContext","variant","align","readOnly","Input","css","placeholder","onChange","e","StyledForm","Item","addClassification","Fragment","key","onClick","Button","direction","options","label","uuidv4","relatedLot","additionalClassification","Form","Lot","form","alignment","horizontal","vertical","Flex","onSubmit","preventDefault","console","log","App","useReducer","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39c86600.chunk.js","sourcesContent":["import React from 'react';\nimport { Data } from './types';\n\ntype Action = {\n  type: string;\n  payload: any\n}\n\nexport const ContextForm: Data = {\n  tender: {\n    title: '',\n    description: '',\n    classification: {\n      scheme: 'CPV',\n      id: '',\n      description: '',\n    },\n    lots: [],\n    items: [],\n  }\n};\n\nexport const Context = React.createContext<{state: typeof ContextForm, dispatch: (action: Action) => void}>({ \n  state: ContextForm, \n  dispatch: () => {}\n});\n","import { Data } from './types';\n\nexport const initialState: Data = {\n  tender: {\n    title: '',\n    description: '',\n    classification: {\n      scheme: 'CPV',\n      id: '',\n      description: '',\n    },\n    lots: [],\n    items: []\n  }\n};\n\nexport const reducer = (state: Data, action: any) => {\n  switch (action.type) {\n    case 'addTitle': {\n      return {\n        tender: {\n          ...state.tender,\n          title: action.payload\n        }\n      };\n    }\n\n    case 'addDescription': {\n      return {\n        tender: {\n          ...state.tender,\n          description: action.payload\n        }\n      }\n    }\n\n    case 'addClassificationDescription': {\n      return {\n        tender: {\n          ...state.tender,\n          classification: {\n            ...state.tender.classification,\n            description: action.payload\n          }       \n        }\n      }\n    }\n\n    case 'addUnit': {\n      return {\n        tender: {\n          ...state.tender,\n          items: {\n            ...state.tender.items,\n            unit: {\n              name: action.payload\n            }\n          }\n        }\n      }\n    }\n\n    case 'addQuantity': {\n      return {\n        tender: {\n          ...state.tender,\n          items: {\n            ...state.tender.items,\n            quantity: action.payload\n          }\n        }\n      }\n    }\n\n    case 'addLot': {\n      return {\n        tender: {\n          ...state.tender,\n          lots: [\n            ...state.tender.lots,\n            action.payload\n          ]\n        }\n      }\n    }\n\n    case 'removeLot': {\n      return {\n        tender: {\n          ...state.tender,\n          lots: [\n            ...state.tender.lots.filter((lot, i) => i !== action.payload.index)\n          ]\n        }\n      }\n    }\n\n    case 'addLotTitle': {\n      return {\n        tender: {\n          ...state.tender,\n          lots: [\n            ...state.tender.lots.map((lot, index) => {\n              if (index === action.payload.index) {\n                return {\n                  id: lot.id,\n                  title: action.payload.value\n                }\n              }\n              return lot;\n            })\n          ]\n        }\n      }\n    }\n\n    case 'addItem': {\n      return {\n        tender: {\n          ...state.tender,\n          items: [\n            ...state.tender.items,\n            action.payload\n          ]\n        }\n      }\n    }\n\n    case 'addItemDescription': {\n      return {\n        tender : {\n          ...state.tender,\n          items: {\n            ...state.tender.items.map((item, index) => {\n              if (index === action.payload.index) {\n                return {\n                  id: item.id,\n                  description: action.payload.value\n                }\n              }\n              return item;\n            })       \n          }\n        }\n      }\n    }\n\n    \n    default:\n      return state;\n  }\n}\n\n","import styled from 'styled-components';\n\nconst SubForm = styled.div`\n  border: 1px solid var(--c-positive);\n  border-radius: 4px;\n  padding: 10px;\n  margin: 10px 0;\n`;\n\nexport default { SubForm };\n","import React, { FC, useContext } from 'react';\nimport { css } from 'styled-components';\n\nimport Text from 'ustudio-ui/components/Text';\nimport TextInput from 'ustudio-ui/components/Input/TextInput';\nimport TextArea from 'ustudio-ui/components/Input/TextArea';\n\nimport { Context } from '../../context';\nimport Styled from './Classification.styles';\n\n\nexport const Classification: FC = () => {\n  const { dispatch } = useContext(Context);\n\n  return (\n    <Styled.SubForm>\n      <Text \n        variant='h5' \n        align='center'\n      >\n        Classification\n      </Text>\n        <label>\n          <TextInput \n            name='scheme'\n            value='CPV'\n            readOnly\n            styled={{\n              Input: css`\n                width: 40%;\n              `\n            }}\n          />\n        </label>\n\n        <label>\n          Description: \n          <TextArea  \n            name='classification-description'\n            placeholder='Enter description'\n            onChange={(e) => dispatch({\n              type: 'addClassificationDescription',\n              payload: e\n            })}\n          />\n        </label>\n    </Styled.SubForm>\n  )\n}\n","import styled from 'styled-components';\n\nconst StyledForm = styled.div`\n  border: 1px solid var(--c-positive);\n  border-radius: 4px;\n  padding: 10px;\n  margin-top: 10px;\n`;\n\nexport default { StyledForm };","import React, { FC, useContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { css } from 'styled-components';\n\nimport Text from 'ustudio-ui/components/Text';\nimport TextInput from 'ustudio-ui/components/Input/TextInput';\nimport NumberInput from 'ustudio-ui/components/Input/NumberInput';\nimport Button from 'ustudio-ui/components/Button';\nimport RadioGroup from 'ustudio-ui/components/RadioGroup';\n\nimport { Context } from '../../context';\nimport { Classification } from '../Classification';\nimport Styled from './Item.styles';\n\nexport const Item: FC = () => {\n  const { state, dispatch } = useContext(Context);\n  \n  const addClassification = () => {\n  }\n\n  return (\n    <Styled.StyledForm>\n      <Text variant='h5' align='center'>Items</Text>\n      {state.tender.items.map((item, index) => (\n        <React.Fragment key={index}>\n          <label>\n            Item description:\n            <TextInput\n              name='item-description'\n              placeholder='Enter description'\n              onChange={(value) => dispatch({\n                type: 'addItemDescription',\n                payload: {\n                  value,\n                  index\n                }\n              })}\n            />\n          </label>\n\n          <Classification />\n          <label>\n            <Text align='center'>Additional classification:</Text>\n            <Button \n              type='button'\n              onClick={addClassification}\n              styled={{\n                Button: css`\n                  display: block;\n                  margin: 10px auto;\n                `,\n              }}\n            >\n              Add\n            </Button>\n          </label>\n\n          <label>\n            Unit:\n            <RadioGroup\n              direction='row'\n              name='options'\n              onChange={(value) => dispatch({\n                type: 'addUnit',\n                payload: {\n                  value,\n                  index\n                }\n              })}\n              options={{\n                'metre': {\n                  label: 'metre',\n                  value: 'metre'\n                },\n                'kilo': {\n                  label: 'kilo',\n                  value: 'kilo'\n                }\n              }}\n            />\n          </label>\n\n          <label>\n            Quantity:\n            <NumberInput\n              name='quantity'\n              onChange={(value) => dispatch({\n                type: 'addQuantity',\n                payload: {\n                  value,\n                  index\n                }\n              })}\n              placeholder='Enter quantity'\n            />\n          </label>\n        </React.Fragment>\n      ))}\n\n      <Button \n        type='button' \n        styled={{\n          Button: css`\n            display: block;\n            margin: auto;\n          `,\n        }}\n        onClick={(value) => dispatch({\n          type: 'addItem',\n          payload: {\n            description: '',\n            id: uuidv4(),\n            relatedLot: '',\n            classification: {\n              scheme: 'CPV',\n              id: uuidv4(),\n              description: ''\n            },\n            additionalClassification: [],\n            quantity: 0,\n            unit: {\n              id: '123',\n              value: 'metre'\n            }\n          }\n        })}\n      >\n        Add item\n      </Button>\n    </Styled.StyledForm >\n  )\n}","import styled from 'styled-components';\n\nconst Form = styled.div`\n  padding: 10px;\n  border: 1px solid var(--c-positive);\n  border-radius: 4px;\n`;\n\nexport default { Form };","import React, { FC, useContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { css } from 'styled-components';\nimport Flex from 'ustudio-ui/components/Flex';\nimport Text from 'ustudio-ui/components/Text';\nimport TextInput from 'ustudio-ui/components/Input/TextInput';\nimport Button from 'ustudio-ui/components/Button';\n\nimport { Item } from '../Item';\nimport { Context } from '../../context';\n\nimport Styled from './Lot.styles';\n\nexport const Lot: FC = () => {\n  const { state, dispatch } = useContext(Context);\n\n  return (\n    <Styled.Form>\n      <Text align='center' variant='h5'>Create lot</Text>\n      {state.tender.lots.map((lot, index) => (\n        <React.Fragment key={lot.id}>\n          <label key={lot.id}>\n            Lot title:\n            <Flex>\n              <TextInput\n                name='lot-title'\n                placeholder='Enter lot title'\n                onChange={(value) => dispatch({\n                  type: 'addLotTitle',\n                  payload: {\n                    value,\n                    index\n                  }\n                })}\n              />\n              <Button\n                type='button'\n                onClick={() => dispatch({\n                  type: 'removeLot',\n                  payload: {\n                    index,\n                  }\n                })}\n              >\n                Remove\n              </Button>\n            </Flex>\n          </label>\n          <Item />\n        </React.Fragment>\n      ))}\n\n      <Button\n        onClick={(value) => dispatch({\n          type: 'addLot',\n          payload: {\n            title: '',\n            id: uuidv4()\n          }\n        })}\n        styled={{\n          Button: css`\n            display: block;\n            margin: 10px auto;\n          `,\n        }}\n      >\n        Add lot\n      </Button>\n    </Styled.Form>\n  )\n}","import styled from 'styled-components';\n\nconst Form = styled.form`\n  width: 100%;\n  max-width: 600px;\n  padding: 10px;\n  border: 1.5px solid var(--c-positive-light);\n  border-radius: 8px;\n`;\n\nexport default { Form };\n","import React, { FC, FormEvent, useContext } from 'react';\n//import { v4 as uuidv4 } from 'uuid';\nimport { css } from 'styled-components';\n\nimport Flex from 'ustudio-ui/components/Flex';\nimport TextInput from 'ustudio-ui/components/Input/TextInput';\nimport TextArea from 'ustudio-ui/components/Input/TextArea';\nimport Button from 'ustudio-ui/components/Button';\n\nimport { Lot } from '../Lot';\nimport { Context } from '../../context';\nimport { Classification } from '../Classification';\n\n\nimport Styled from './Form.styles';\n\nexport const Form: FC = () => {\n  const {state, dispatch} = useContext(Context);  \n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    \n    console.log(state);    \n  }\n\n  return (\n    <Flex\n      alignment={{\n        horizontal: 'center',\n        vertical: 'center'\n      }}\n      styled={{\n        Flex: css`\n          width: 60%;\n          margin: 50px auto;\n        `,\n      }}\n    >\n      <Styled.Form onSubmit={handleSubmit} >\n        <label>\n          Title:\n          <TextInput\n            name='title'\n            placeholder='Enter tender title'\n            onChange={(e) => dispatch({\n              type: 'addTitle',\n              payload: e\n            })}            \n          />\n        </label>\n\n        <label>\n          Description:\n          <TextArea\n            name='description'\n            placeholder='Enter description'\n            onChange={(e) => dispatch({\n              type: 'addDescription',\n              payload: e\n            })}            \n          />\n        </label>\n        <Classification />  \n        <Lot />\n        <Button\n          styled={{\n            Button: css`\n              display: block;\n              margin: 30px auto 0;\n            `,\n          }}\n        >\n          Create tender\n        </Button>\n      </Styled.Form>\n    </Flex>\n  )\n};\n","import React, { FC, useReducer } from 'react';\nimport { Context } from './context';\nimport { reducer, initialState } from './reducer';\nimport { Form } from './components';\n\nconst App: FC = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <Context.Provider value={{ state, dispatch }}>\n      <Form />\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'ustudio-ui/theme';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}